"use strict";var app=angular.module("mapApp",["ngRoute","ngWebSocket","leaflet-directive"]);
app.controller("MainMapCtrl",["$scope","$websocket","$filter","$timeout","$interval","leafletData",function(e,t,n,a,o,r){function i(e){return"MAC: "+e.mac+"<br/>-----------------------------<br/>LAT: "+e.location.lat+"<br/>LON: "+e.location.lon+"<br/>-----------------------------<br/>STATUS: "+(e.status&&e.status.isOnline?"ONLINE":"OFFLINE")}function l(e){for(var t=JSON.parse(e),n=0;n<t.data.length;n++){var a=t.data[n];s.hasOwnProperty(a.mac)?(a=angular.extend({},s[a.mac],a),"location"===t.name&&a.marker.Move(a.location.lat,a.location.lon)):"location"===t.name&&(a.marker=new PruneCluster.Marker(a.location.lat,a.location.lon),c.RegisterMarker(a.marker)),a.marker.data.info=a,s[a.mac]=a}}angular.extend(e,{center:{lat:31,lng:85,zoom:4},position:{lat:51,lng:0},layers:{baselayers:{xyz:{name:"Cloudmade Tourist",url:"http://{s}.tile.cloudmade.com/{key}/{styleId}/256/{z}/{x}/{y}.png",layerParams:{key:"007b9471b4c74da4a6ec7ff43552b16f",styleId:7},type:"xyz"}},overlays:{markersOverlay:{name:"Markers",type:"group",visible:!0}}}}),e.collection=[],e.settings={pagination:{currentPage:0,pageSize:10},search:""},e.isNextPageAvailable=function(){return e.settings.pagination.currentPage>=e.getDataLength()/e.settings.pagination.pageSize-1},e.numberOfPages=function(){return Math.ceil(e.getDataLength()/e.settings.pagination.pageSize)},e.getDataLength=function(){return n("filter")(e.collection,{mac:e.settings.search}).length},e.moveMap=function(t){e.center={lat:t.location.lat,lng:t.location.lon,zoom:14}};var c=new PruneClusterForLeaflet(60),s={},u=t("ws://localhost:8091/");!function(){r.getMap().then(function(t){t.addLayer(c),c.PrepareLeafletMarker=function(e,t){var n;e.on("popupopen",function(a){n=o(function(){e._popup._content=i(t.info),e._popup.update()},200)}),e.on("popupclose",function(e){o.cancel(n)}),e.getPopup()||e.bindPopup(i(t.info))},u.send(JSON.stringify({name:"start"})),u.onMessage(function(e){a(l(e.data),0)}),o(function(){c.ProcessView(),e.collection=Object.values(s)},500)})}()}]),app.filter("startFrom",function(){return function(e,t){return t=+t,e.slice(t)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
